// User function template for C++

class Solution{
    public:
    void solve(int i,int j,string st,vector<vector<int>> &m,int n,vector<string> &ans,vector<vector<int>> &vis){
        if((i == n-1 && j == n-1)){
            ans.push_back(st);
            return;
        }
        if(i+1 < n && !vis[i+1][j] && m[i+1][j] == 1){
            vis[i][j] = 1;
            solve(i+1,j,st+'D',m,n,ans,vis);
            vis[i][j] = 0;
        }
        if(j+1 < n && !vis[i][j+1]  && m[i][j+1] == 1){
            vis[i][j] = 1;
            solve(i,j+1,st+'R',m,n,ans,vis);
            vis[i][j] = 0;
        }
        if(i-1 >= 0 && !vis[i-1][j] && m[i-1][j] == 1){
            vis[i][j] = 1;
            solve(i-1,j,st+'U',m,n,ans,vis);
            vis[i][j] = 0;
        }
        if(j-1 >= 0 && !vis[i][j-1] && m[i][j-1] == 1){
            vis[i][j] = 1;
            solve(i,j-1,st+'L',m,n,ans,vis);
            vis[i][j] = 0;
        }
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<vector<int>> vis(n+1,vector<int>(n+1,0));
        vector<string> ans;
        if(m[0][0]==1)
            solve(0,0,"",m,n,ans,vis);
        return ans;
        
    }
};

    