/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
ListNode *detectCycle(ListNode *head) {
        ListNode* slow = head,*fast = head;
        if(slow ==  NULL || slow -> next == NULL)
            return NULL;
        while(fast != NULL && fast -> next != NULL){
            fast = fast -> next;
            if(fast -> next ){
                fast = fast -> next;
                slow = slow -> next;
            }
            if(slow == fast )
                break;
            
        }
        if(slow == fast){
            slow = head;
            while(slow != fast)
            {
                slow  = slow -> next;
                fast = fast -> next;
            }
            return slow;
        }
        return NULL;
    }