int singleNonDuplicate(vector<int>& nums) {
        int n = nums.size();
        int l = 0,h = n-1;
        int mid;
        if(n == 1)
            return nums[0];
        while(l <= h){
            mid = (l+h)/2;
            if((mid + 1) < n && (mid - 1) >= 0 && nums[mid+1] != nums[mid] && nums[mid-1] != nums[mid])
                return nums[mid];
            else if(mid % 2== 0){
                if(mid+1 < n && nums[mid+1] != nums[mid])
                    h = mid - 1;
                else
                    l = mid + 1;
            }
            else if(mid % 2){
                if(mid - 1 >= 0 && nums[mid - 1] != nums[mid])
                    h = mid - 1;
                else 
                    l = mid + 1;
            }
        }
        return nums[mid];
    }
};