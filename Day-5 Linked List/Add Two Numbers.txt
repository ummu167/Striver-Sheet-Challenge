/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry = 0,sum = 0, add = 0;
        ListNode *head = NULL, * temp = NULL;
        if( l1 == NULL)
            return l2;
        if(l2 == NULL)
            return l1;
        while(l1 && l2){
            sum = l1 -> val + l2 -> val + carry;
            carry = sum/10;
            add = sum % 10;
            ListNode* newnode = new ListNode(add);
            if(head == NULL)    
                temp = head =  newnode;
            else{
                temp -> next = newnode;
                temp = newnode;
            }
            l1 = l1 -> next;
            l2 = l2 -> next;
        }
        while(l1 != NULL){
            sum = l1 -> val + carry;
            carry = sum/10;
            add = sum % 10;
            ListNode *newnode = new ListNode(add);
            temp -> next = newnode;
            temp = newnode;
            l1 = l1 -> next;
        }
        while(l2 != NULL){
            sum = l2 -> val + carry;
            carry = sum/10;
            add = sum % 10;
            ListNode *newnode = new ListNode(add);
            temp -> next = newnode;
            temp = newnode;
            l2 = l2 -> next;
        }
        if(carry != 0){
            ListNode *newnode = new ListNode(carry);
            temp -> next = newnode;
            temp = newnode;
        }
        return head;
    }